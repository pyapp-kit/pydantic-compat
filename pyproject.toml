# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

# https://peps.python.org/pep-0621/
[project]
name = "pydantic-compat"
description = "Compatibility layer for pydantic v1/v2"
readme = "README.md"
requires-python = ">=3.7"
license = { text = "BSD 3-Clause License" }
authors = [{ email = "talley.lambert@gmail.com", name = "Talley Lambert" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Pydantic",
    "Typing :: Typed",
]
dynamic = ["version"]
dependencies = ["pydantic", "importlib_metadata; python_version<'3.8'"]

[tool.hatch.envs.default]
dependencies = [
    "pytest",
    "pytest-cov",
    "pdbpp",
    "rich",
    "importlib_metadata; python_version<'3.8'",
]

[tool.hatch.envs.test]

[tool.hatch.envs.test.scripts]
test = "pytest -v"
test-cov = "pytest -v --cov --cov-report=term-missing"
test-cov-xml = "pytest -v --color=yes --cov --cov-report=xml --cov-append"

[[tool.hatch.envs.test.matrix]]
# python = ["3.8", "3.11"] # good for local, too verbose for CI
pydantic = ["v1.8", "v1.9", "v1", "v2"]

[tool.hatch.envs.test.overrides]
matrix.pydantic.extra-dependencies = [
    { value = "pydantic<1.9", if = ["v1.8"] },
    { value = "pydantic<1.10", if = ["v1.9"] },
    { value = "pydantic<2.0", if = ["v1"] },
    { value = "pydantic>=2.0", if = ["v2"] },
]



# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
[project.optional-dependencies]
test = ["pytest>=6.0", "pytest-cov"]
dev = [
    "black",
    "ipython",
    "mypy",
    "pdbpp",
    "pre-commit",
    "pytest-cov",
    "pytest",
    "rich",
    "ruff",
]

[project.urls]
homepage = "https://github.com/pyapp-kit/pydantic-compat"
repository = "https://github.com/pyapp-kit/pydantic-compat"

# https://hatch.pypa.io/latest/config/metadata/
[tool.hatch.version]
source = "vcs"

# https://hatch.pypa.io/latest/config/build/#file-selection
[tool.hatch.build.targets.sdist]
include = ["/src", "/tests"]

[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]

# https://github.com/charliermarsh/ruff
[tool.ruff]
line-length = 88
target-version = "py37"
src = ["src"]
# https://beta.ruff.rs/docs/rules/
select = [
    "E",    # style errors
    "W",    # style warnings
    "F",    # flakes
    "I",    # isort
    "UP",   # pyupgrade
    "C4",   # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
    "TCH",
    "TID",
]

# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
filterwarnings = ["error"]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true

# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "\\.\\.\\.",
    "raise NotImplementedError()",
]
[tool.coverage.run]
source = ["pydantic_compat"]

# https://github.com/mgedmin/check-manifest#configuration
[tool.check-manifest]
ignore = [
    ".github_changelog_generator",
    ".pre-commit-config.yaml",
    ".ruff_cache/**/*",
    "tests/**/*",
]
